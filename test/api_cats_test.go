/*
Cat as a service (CATAAS)

Testing CatsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/mccallry/cataas-go-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_CatsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CatsAPIService CatGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id string

		resp, httpRes, err := apiClient.CatsAPI.CatGet(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatsAPIService CatGetText", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id string
		var text string

		resp, httpRes, err := apiClient.CatsAPI.CatGetText(context.Background(), id, text).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatsAPIService CatRandom", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CatsAPI.CatRandom(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatsAPIService CatRandomTag", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var tag string

		resp, httpRes, err := apiClient.CatsAPI.CatRandomTag(context.Background(), tag).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatsAPIService CatRandomTagText", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var tag string
		var text string

		resp, httpRes, err := apiClient.CatsAPI.CatRandomTagText(context.Background(), tag, text).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CatsAPIService CatRandomText", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var text string

		resp, httpRes, err := apiClient.CatsAPI.CatRandomText(context.Background(), text).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
