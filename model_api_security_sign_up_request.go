/*
Cat as a service (CATAAS)

Cat as a service (CATAAS) is a REST API to spread peace and love (or not) thanks to cats.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ApiSecuritySignUpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSecuritySignUpRequest{}

// ApiSecuritySignUpRequest struct for ApiSecuritySignUpRequest
type ApiSecuritySignUpRequest struct {
	Username             *string `json:"username,omitempty"`
	Password             string  `json:"password"`
	Email                *string `json:"email,omitempty"`
	Secret               string  `json:"secret"`
	AdditionalProperties map[string]interface{}
}

type _ApiSecuritySignUpRequest ApiSecuritySignUpRequest

// NewApiSecuritySignUpRequest instantiates a new ApiSecuritySignUpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSecuritySignUpRequest(password string, secret string) *ApiSecuritySignUpRequest {
	this := ApiSecuritySignUpRequest{}
	this.Password = password
	this.Secret = secret
	return &this
}

// NewApiSecuritySignUpRequestWithDefaults instantiates a new ApiSecuritySignUpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSecuritySignUpRequestWithDefaults() *ApiSecuritySignUpRequest {
	this := ApiSecuritySignUpRequest{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApiSecuritySignUpRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSecuritySignUpRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApiSecuritySignUpRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApiSecuritySignUpRequest) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value
func (o *ApiSecuritySignUpRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ApiSecuritySignUpRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ApiSecuritySignUpRequest) SetPassword(v string) {
	o.Password = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ApiSecuritySignUpRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSecuritySignUpRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ApiSecuritySignUpRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ApiSecuritySignUpRequest) SetEmail(v string) {
	o.Email = &v
}

// GetSecret returns the Secret field value
func (o *ApiSecuritySignUpRequest) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *ApiSecuritySignUpRequest) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *ApiSecuritySignUpRequest) SetSecret(v string) {
	o.Secret = v
}

func (o ApiSecuritySignUpRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSecuritySignUpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	toSerialize["password"] = o.Password
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	toSerialize["secret"] = o.Secret

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiSecuritySignUpRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"password",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiSecuritySignUpRequest := _ApiSecuritySignUpRequest{}

	err = json.Unmarshal(data, &varApiSecuritySignUpRequest)

	if err != nil {
		return err
	}

	*o = ApiSecuritySignUpRequest(varApiSecuritySignUpRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "username")
		delete(additionalProperties, "password")
		delete(additionalProperties, "email")
		delete(additionalProperties, "secret")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiSecuritySignUpRequest struct {
	value *ApiSecuritySignUpRequest
	isSet bool
}

func (v NullableApiSecuritySignUpRequest) Get() *ApiSecuritySignUpRequest {
	return v.value
}

func (v *NullableApiSecuritySignUpRequest) Set(val *ApiSecuritySignUpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSecuritySignUpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSecuritySignUpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSecuritySignUpRequest(val *ApiSecuritySignUpRequest) *NullableApiSecuritySignUpRequest {
	return &NullableApiSecuritySignUpRequest{value: val, isSet: true}
}

func (v NullableApiSecuritySignUpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSecuritySignUpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
